{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/file-commander/file-commander.component.css","webpack:///./src/app/file-commander/file-commander.component.html","webpack:///./src/app/file-commander/file-commander.component.ts","webpack:///./src/app/file-commander/file-commander.module.ts","webpack:///./src/app/file-commander/file-panel/file-panel.component.css","webpack:///./src/app/file-commander/file-panel/file-panel.component.html","webpack:///./src/app/file-commander/file-panel/file-panel.component.ts","webpack:///./src/app/file-commander/model/file-item.ts","webpack:///./src/app/file-commander/model/file-panel-meta.ts","webpack:///./src/app/file-commander/model/file-source.ts","webpack:///./src/app/file-commander/new-folder-dialog/new-folder-dialog.component.css","webpack:///./src/app/file-commander/new-folder-dialog/new-folder-dialog.component.html","webpack:///./src/app/file-commander/new-folder-dialog/new-folder-dialog.component.ts","webpack:///./src/app/file-commander/rename-dialog/rename-dialog.component.css","webpack:///./src/app/file-commander/rename-dialog/rename-dialog.component.html","webpack:///./src/app/file-commander/rename-dialog/rename-dialog.component.ts","webpack:///./src/app/file-commander/service/file-mock.ts","webpack:///./src/app/file-commander/service/file.service.ts","webpack:///./src/app/shared/utils.ts","webpack:///./src/app/state/actions.ts","webpack:///./src/app/state/reducers.ts","webpack:///./src/app/state/selectors.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \":host {\\n  text-align:center;\\n  padding: 40px;\\n  height: 100%;\\n  box-sizing: border-box;\\n  display: block;\\n}\\n\\n:host .app {\\n  height: 100%;\\n}\"","module.exports = \"<div class=\\\"app\\\">\\n  <h1>\\n    Welcome to File Commander !\\n  </h1>\\n    <ds-file-commander>\\n    </ds-file-commander>\\n  <br />\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ds-app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { FileCommanderModule } from './file-commander/file-commander.module';\nimport { AppComponent } from './app.component';\n\nimport { fileCommanderReducer } from './state/reducers';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FlexLayoutModule,\n    FileCommanderModule,\n    StoreModule.forRoot({panels: fileCommanderReducer})\n  ],\n  providers: [\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \":host {\\n  height: 100%;\\n}\\n\\n:host .container {\\n  height: calc(100% - 60px);\\n}\\n\\n.file-commander {\\n  min-width: 200px;\\n  min-height: 200px;\\n  padding: 0;\\n  margin-bottom: 24px;\\n}\"","module.exports = \"<div fxLayout\\n     fxLayout.xs=\\\"column\\\"\\n     fxLayoutAlign=\\\"center\\\"\\n     fxLayoutGap=\\\"10px\\\"\\n     fxLayoutGap.xs=\\\"0\\\"\\n     class=\\\"container\\\">\\n  <mat-card class=\\\"file-commander\\\"\\n            fxFlex=\\\"50%\\\">\\n    <ds-file-panel  *ngIf=\\\"panelLeftMeta\\\"\\n                    [fileItems]=\\\"panelLeftMeta?.currentItems\\\"\\n                    [folderItems]=\\\"panelLeftMeta?.allFolders\\\"\\n                    [path]=\\\"panelLeftMeta?.currentPath\\\" \\n                    [canNavigateUp]=\\\"panelLeftMeta?.canNavigateUp\\\"\\n\\n                    (folderAdded)=\\\"onAddFolder(panelLeftMeta.id, $event)\\\"\\n                    (itemRemoved)=\\\"onRemoveItem(panelLeftMeta.id, $event)\\\" \\n                    (goDown)=\\\"onGoToFolder(panelLeftMeta.id, $event)\\\" \\n                    (goUp)=\\\"onGoUp(panelLeftMeta.id)\\\" \\n                    (itemRenamed)=\\\"onRenameItem(panelLeftMeta.id, $event)\\\"\\n                    (itemMoved)=\\\"onMoveItem(panelLeftMeta.id, $event)\\\"\\n                    (itemRenamed)=\\\"onRenameItem(panelLeftMeta.id, $event)\\\"\\n                    (itemMoved)=\\\"onMoveItem(panelLeftMeta.id, $event)\\\"\\n                    (itemCopiedToOtherSide)=\\\"onCopyToOtherSide(panelLeftMeta.id, $event)\\\"\\n                    (itemMovedToOtherSide)=\\\"onMoveToOtherSide(panelLeftMeta.id, $event)\\\">\\n    </ds-file-panel>\\n  </mat-card>\\n  <mat-card class=\\\"file-commander\\\"\\n            fxFlex=\\\"50%\\\">\\n    <ds-file-panel  *ngIf=\\\"panelRightMeta\\\"\\n                    [fileItems]=\\\"panelRightMeta?.currentItems\\\"\\n                    [folderItems]=\\\"panelRightMeta?.allFolders\\\"\\n                    [path]=\\\"panelRightMeta?.currentPath\\\" \\n                    [canNavigateUp]=\\\"panelRightMeta?.canNavigateUp\\\"\\n\\n                    (folderAdded)=\\\"onAddFolder(panelRightMeta.id, $event)\\\"\\n                    (itemRemoved)=\\\"onRemoveItem(panelRightMeta.id, $event)\\\" \\n                    (goDown)=\\\"onGoToFolder(panelRightMeta.id, $event)\\\" \\n                    (goUp)=\\\"onGoUp(panelRightMeta.id)\\\" \\n                    (itemRenamed)=\\\"onRenameItem(panelRightMeta.id, $event)\\\"\\n                    (itemMoved)=\\\"onMoveItem(panelRightMeta.id, $event)\\\"\\n                    (itemCopiedToOtherSide)=\\\"onCopyToOtherSide(panelRightMeta.id, $event)\\\"\\n                    (itemMovedToOtherSide)=\\\"onMoveToOtherSide(panelRightMeta.id, $event)\\\">\\n    </ds-file-panel>\\n  </mat-card>\\n</div>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { v4 } from 'uuid';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { FileItem } from './model/file-item';\nimport { FileSource } from './model/file-source';\nimport { FilePanelMeta } from './model/file-panel-meta';\n\nimport { FileService } from './service/file.service';\nimport { clone } from '../shared/utils';\nimport { AppState, LEFT_PANEL_ID, RIGHT_PANEL_ID } from '../state/reducers';\nimport { selectLeftPanel, selectRightPanel, selectPanels } from '../state/selectors';\nimport { SelectFolder } from '../state/actions';\n\n@Component({\n  selector: 'ds-file-commander',\n  templateUrl: './file-commander.component.html',\n  styleUrls: ['./file-commander.component.css']\n})\nexport class FileCommanderComponent implements OnInit {\n  panelLeftMeta: FilePanelMeta;\n  panelRightMeta: FilePanelMeta;\n\n  constructor(private fileService: FileService,\n              private store: Store<AppState>) {}\n\n  ngOnInit() {\n    this.subscribeUpdates();\n  }\n\n  onAddFolder(panelId: string, folder: { name: string }) {\n    const panel = this.getPanel(panelId);\n    this.fileService.add(panelId, { isFolder: true, name: folder.name, parentItem: panel.currentRoot ? panel.currentRoot.id : 'root' });\n    this.updateFileItemQuery(panelId);\n  }\n  \n  onRemoveItem(panelId: string, item: FileItem) {\n    this.fileService.delete(panelId, item);\n    this.updateFileItemQuery(panelId);\n  }\n  \n  onMoveItem(panelId: string, event: { item: FileItem; moveTo: FileItem }) {\n    this.fileService.update(panelId, event.item.id, { parentItem: event.moveTo.id });\n    this.updateFileItemQuery(panelId);\n  }\n  \n  onRenameItem(panelId: string, item: FileItem) {\n    this.fileService.update(panelId, item.id, { name: item.name });\n    this.updateFileItemQuery(panelId);\n  }\n\n  onMoveToOtherSide(panelId: string, item: FileItem) {\n    this.fileService.moveToOtherPanel(panelId, item);\n    this.updateFileItemQuery(panelId);\n    const otherPanelId = panelId === LEFT_PANEL_ID ? RIGHT_PANEL_ID : LEFT_PANEL_ID;\n    this.updateFileItemQuery(otherPanelId);\n  }\n\n  onCopyToOtherSide(panelId: string, item: FileItem) {\n    this.fileService.copyToOtherPanel(panelId, item);\n    const otherPanelId = panelId === LEFT_PANEL_ID ? RIGHT_PANEL_ID : LEFT_PANEL_ID;\n    this.updateFileItemQuery(otherPanelId);\n  }\n\n  onGoUp(panelId: string) {\n    this.fileService.selectFolderUp(this.getPanel(panelId));\n    this.updateFileItemQuery(panelId);\n  }\n  \n  onGoToFolder(panelId: string, item: FileItem) {\n    this.fileService.selectFolderDown(this.getPanel(panelId), item);\n    this.updateFileItemQuery(panelId);\n  }\n\n  private subscribeUpdates() {\n    this.store.select(selectLeftPanel).subscribe(p => this.panelLeftMeta = p);\n    this.store.select(selectRightPanel).subscribe(p => this.panelRightMeta = p);\n  }\n\n  private updateFileItemQuery(panelId: string) {\n    const panel = this.getPanel(panelId);\n    this.fileService.queryInFolder(panel, panel.currentRoot ? panel.currentRoot.id : 'root');\n  }\n\n  private getPanel(panelId: string) {\n    return this.panelLeftMeta.id === panelId ? this.panelLeftMeta : this.panelRightMeta;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { Observable } from 'rxjs';\n\nimport { FileSource } from './model/file-source';\nimport { FileItem } from './model/file-item';\n\nimport { FileService } from './service/file.service';\n\nimport { NewFolderDialogComponent } from './new-folder-dialog/new-folder-dialog.component';\nimport { RenameDialogComponent } from './rename-dialog/rename-dialog.component';\nimport { FilePanelComponent } from './file-panel/file-panel.component';\nimport { FileCommanderComponent } from './file-commander.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    FlexLayoutModule,\n    MatIconModule,\n    MatGridListModule,\n    MatMenuModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatInputModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule\n  ],\n  declarations: [\n    FileCommanderComponent,\n    NewFolderDialogComponent,\n    RenameDialogComponent,\n    FilePanelComponent\n  ],\n  entryComponents: [\n    NewFolderDialogComponent,\n    RenameDialogComponent\n  ],\n  exports: [\n    FileCommanderComponent\n  ]\n})\n\nexport class FileCommanderModule {}","module.exports = \":host {\\n  height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n}\\n\\n:host .container {\\n  min-height: 100px;\\n  overflow-y: scroll;\\n  padding: 10px;\\n}\\n\\n:host .container__list-tiles-flex {\\n  width: 100%;\\n}\\n\\n:host .panel-path {\\n  margin-left: 8px;\\n}\\n\\n.file-or-folder {\\n  padding: 10px;\\n  overflow: hidden;\\n}\\n\\n.file-or-folder:hover {\\n  background-color: #eee;\\n}\\n\\n.file-or-folder .side-menu-container {\\n  display: none;\\n}\\n\\n.file-or-folder:hover .side-menu-container {\\n  display: block;\\n  width: 150px;\\n}\\n\\n:host .side-menu:hover {\\n  color: #777;\\n}\\n\\n.file-or-folder:hover .side-menu-container--list {\\n  text-align: right;\\n  position: absolute;\\n  right: 10px;\\n}\\n\\n.file-or-folder.text-align-left {\\n  text-align: left;\\n}\\n\\n.file-or-folder.max-item-height {\\n  max-height: 140px;\\n}\\n\\n.file-or-folder-icon-tile {\\n  width: 50px;\\n  height: 50px;\\n  font-size: 50px;\\n}\\n\\n.file-or-folder-icon-list {\\n  display: inline-block;\\n  width: 24px;\\n  height: 24px;\\n  font-size: 24px;\\n}\\n\\n.pointer {\\n  cursor: pointer;\\n  margin-right: 10px;\\n}\\n\\n.spacer {\\n  flex: 1 1 auto;\\n}\\n\\n.text-ellipsis {\\n  width: 100%;\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\"","module.exports = \"<mat-toolbar>\\n  <mat-icon *ngIf=\\\"canNavigateUp\\\" class=\\\"pointer\\\" (click)=\\\"navigateUp()\\\">\\n    arrow_back\\n  </mat-icon>\\n  <span class=\\\"panel-path\\\">\\n    {{path || 'Files'}}\\n  </span>\\n  <span class=\\\"spacer\\\"></span>\\n  <mat-icon class=\\\"side-menu pointer\\\" title=\\\"List View\\\" (click)=\\\"selectListView()\\\">\\n    list\\n  </mat-icon>\\n  <mat-icon class=\\\"side-menu pointer\\\" title=\\\"Tiles View\\\" (click)=\\\"selectTilesView()\\\">\\n    view_module\\n  </mat-icon>\\n  <mat-icon class=\\\"side-menu pointer\\\" title=\\\"Create Folder\\\" (click)=\\\"openNewFolderDialog()\\\">\\n    create_new_folder\\n  </mat-icon>\\n</mat-toolbar>\\n\\n<div class=\\\"container\\\"\\n      fxFlex fxLayout=\\\"row\\\"\\n      fxLayoutAlign=\\\"space-between stretch\\\">\\n\\n  <div fxLayout=\\\"{{viewType === ViewTypeEnum.LIST ? 'column nowrap' : 'row wrap'}}\\\"\\n        fxLayout.xs=\\\"column\\\"\\n        fxLayoutAlign=\\\"{{viewType === ViewTypeEnum.LIST ? '' : 'center'}}\\\"\\n        fxLayoutGap=\\\"{{viewType === ViewTypeEnum.LIST ? '' : '10px'}}\\\"\\n        class=\\\"container__list-tiles-flex\\\">\\n\\n    <div fxFlex=\\\"{{viewType === ViewTypeEnum.LIST ? '40px' : '140px'}}\\\" \\n          *ngFor=\\\"let item of fileItems\\\"\\n          class=file-or-folder\\n          [ngClass]=\\\"{'text-align-left': viewType === ViewTypeEnum.LIST,\\n            'max-item-height': viewType !== ViewTypeEnum.LIST,\\n            'pointer': item.isFolder}\\\">\\n      <span [matMenuTriggerFor]=\\\"rootMenu\\\" \\n            [matMenuTriggerData]=\\\"{item: item}\\\" \\n            #menuTrigger=\\\"matMenuTrigger\\\">\\n      </span>\\n      <div  fxLayout=\\\"{{viewType === ViewTypeEnum.LIST ? 'row nowrap' : 'column wrap'}}\\\" \\n            fxLayoutAlign=\\\"space-between center\\\" \\n            (click)=\\\"navigateDown(item)\\\" \\n            (contextmenu)=\\\"openMenu($event, menuTrigger)\\\">\\n\\n        <mat-icon color=\\\"primary\\\" \\n                  class=\\\"pointer\\\"\\n                  [ngClass]=\\\"{'file-or-folder-icon-tile': viewType === ViewTypeEnum.TILES,\\n                    'file-or-folder-icon-list': viewType === ViewTypeEnum.LIST}\\\">\\n          {{item.isFolder ? 'folder' : 'insert_drive_file'}}\\n        </mat-icon>\\n        <span class=\\\"text-ellipsis\\\">{{item.name}}</span>\\n        <span class=\\\"text-ellipsis\\\">{{item.isFolder ? '[folder]' : '[file]'}}</span>\\n        \\n        <span class=\\\"side-menu-container\\\" [ngClass]=\\\"{'side-menu-container--list': viewType === ViewTypeEnum.LIST}\\\">\\n          <span class=\\\"spacer\\\"></span>\\n          <mat-icon title=\\\"Move To Other Side\\\" class=\\\"side-menu pointer\\\" (click)=\\\"moveToOtherSide(item, $event)\\\">reply</mat-icon>\\n          <mat-icon title=\\\"Copy To Other Side\\\" class=\\\"side-menu pointer\\\" (click)=\\\"copyToOtherSide(item, $event)\\\">file_copy</mat-icon>\\n          <mat-icon title=\\\"Rename\\\" class=\\\"side-menu pointer\\\" (click)=\\\"openRenameDialog(item, $event)\\\">edit</mat-icon>\\n          <mat-icon title=\\\"Delete\\\" class=\\\"side-menu pointer\\\" (click)=\\\"deleteItem(item, $event)\\\">delete</mat-icon>\\n        </span>\\n\\n        <mat-menu #rootMenu=\\\"matMenu\\\" [overlapTrigger]=\\\"false\\\">\\n          <ng-template matMenuContent let-item=\\\"item\\\">\\n            <button mat-menu-item [matMenuTriggerFor]=\\\"moveToMenu\\\" [matMenuTriggerData]=\\\"{self: item}\\\">\\n              <mat-icon>open_with</mat-icon>\\n              <span>Move To</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"moveToOtherSide(item, $event)\\\">\\n              <mat-icon>add_box</mat-icon>\\n              <span>Move To Other Side</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"copyToOtherSide(item, $event)\\\">\\n              <mat-icon>reply</mat-icon>\\n              <span>Copy To Other Side</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"openRenameDialog(item, $event)\\\">\\n              <mat-icon>edit</mat-icon>\\n              <span>Rename</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"deleteItem(item, $event)\\\">\\n              <mat-icon>delete</mat-icon>\\n              <span>Delete</span>\\n            </button>\\n          </ng-template>\\n        </mat-menu>\\n        \\n        <mat-menu #moveToMenu=\\\"matMenu\\\">\\n          <ng-template matMenuContent let-self=\\\"self\\\">\\n            <ng-container *ngFor=\\\"let item of clearFolderItems(self)\\\">\\n              <button *ngIf=\\\"item.id !== self.id\\\" mat-menu-item (click)=\\\"moveItem(self, item)\\\">{{item.name}}</button>\\n            </ng-container>\\n          </ng-template>\\n        </mat-menu>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatMenuTrigger } from '@angular/material/menu';\n\nimport { FileItem } from '../model/file-item';\n\nimport { convertArrayToMap } from '../../shared/utils';\n\nimport { NewFolderDialogComponent } from '../new-folder-dialog/new-folder-dialog.component';\nimport { RenameDialogComponent } from '../rename-dialog/rename-dialog.component';\n\nenum ViewTypeEnum {\n  LIST, TILES\n}\n\n@Component({\n  selector: 'ds-file-panel',\n  templateUrl: './file-panel.component.html',\n  styleUrls: ['./file-panel.component.css']\n})\nexport class FilePanelComponent {\n  private foldersMap: any;\n  private viewType: ViewTypeEnum = ViewTypeEnum.LIST;\n  private ViewTypeEnum = ViewTypeEnum;\n\n  @Input() fileItems: FileItem[];\n  @Input() folderItems: FileItem[];\n  @Input() canNavigateUp: string;\n  @Input() path: string;\n\n  @Output() folderAdded = new EventEmitter<{ name: string }>();\n  @Output() itemRemoved = new EventEmitter<FileItem>();\n  @Output() itemRenamed = new EventEmitter<FileItem>();\n  @Output() itemMoved = new EventEmitter<{ item: FileItem; moveTo: FileItem }>();\n\n  @Output() itemMovedToOtherSide = new EventEmitter<FileItem>();\n  @Output() itemCopiedToOtherSide = new EventEmitter<FileItem>();\n\n  @Output() goUp = new EventEmitter();\n  @Output() goDown = new EventEmitter<FileItem>();\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.folderItems) {\n      this.foldersMap = convertArrayToMap(changes.folderItems.currentValue, 'id');\n    }\n  }\n\n  deleteItem(item: FileItem, event: any) {\n    event.stopPropagation();\n    this.itemRemoved.emit(item);\n  }\n\n  moveItem(item: FileItem, moveTo: FileItem) {\n    this.itemMoved.emit({ item: item, moveTo: moveTo });\n  }\n\n  moveToOtherSide(item: FileItem, event: any) {\n    event.stopPropagation();\n    this.itemMovedToOtherSide.emit(item);\n  }\n\n  copyToOtherSide(item: FileItem, event: any) {\n    event.stopPropagation();\n    this.itemCopiedToOtherSide.emit(item);\n  }\n\n  navigateDown(item: FileItem) {\n    if (item.isFolder) {\n      this.goDown.emit(item);\n    }\n  }\n\n  navigateUp() {\n    this.goUp.emit();\n  }\n\n  openNewFolderDialog() {\n    let dialogRef = this.dialog.open(NewFolderDialogComponent);\n    dialogRef.afterClosed().subscribe(res => {\n      if (res) {\n        this.folderAdded.emit({ name: res });\n      }\n    });\n  }\n  \n  openRenameDialog(item: FileItem, event: any) {\n    event.stopPropagation();\n    let dialogRef = this.dialog.open(RenameDialogComponent, {\n      data: { itemName: item.name }\n    });\n    dialogRef.afterClosed().subscribe(res => {\n      if (res) {\n        item.name = res;\n        this.itemRenamed.emit(item);\n      }\n    });\n  }\n\n  openMenu(event: MouseEvent, viewChild: MatMenuTrigger) {\n    event.preventDefault();\n    viewChild.openMenu();\n  }\n\n  clearFolderItems(item: FileItem): FileItem[] {\n    let filtered = this.folderItems;\n    if (!this.canNavigateUp) {\n      filtered = this.folderItems.filter(i => i.id !== 'root');\n    }\n    filtered = filtered.filter(i => !this.isChildFolder(item, i));\n    return filtered;\n  }\n\n  isChildFolder(item: FileItem, folder: FileItem): boolean {\n    while (folder.id !== 'root') {\n      if (folder.parentItem === item.id) { return true; }\n      folder = this.foldersMap[folder.parentItem];\n    }\n    return false;\n  }\n\n  selectListView() {\n    this.viewType = ViewTypeEnum.LIST;\n  }\n\n  selectTilesView() {\n    this.viewType = ViewTypeEnum.TILES;\n  }\n\n}\n","export class FileItem {\n  constructor(public id?: string,\n              public isFolder?: boolean,\n              public name?: string,\n              public parentItem?: string) { }\n}\n","import { FileItem } from \"./file-item\";\nimport { FileSource } from \"./file-source\";\n\nexport class FilePanelMeta {\n  constructor(public id?: string,\n              public source?: FileSource,\n              public allFolders?: FileItem[],\n              public currentItems?: FileItem[],\n              public currentRoot?: FileItem,\n              public currentPath?: string,\n              public canNavigateUp?: boolean) {}\n}","import { FileItem } from \"./file-item\";\n\nexport class FileSource {\n  public items: Map<string, FileItem> = new Map<string, FileItem>();\n\n  constructor(public id?: string,\n              public name?: string) { }\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Create a new folder</h1>\\n\\n<mat-dialog-content>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Folder Name\\\" [(ngModel)]=\\\"folderName\\\">\\n  </mat-form-field>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button mat-raised-button mat-dialog-close>Cancel</button>\\n  <button mat-raised-button [mat-dialog-close]=\\\"folderName\\\" color=\\\"primary\\\">OK</button>\\n</mat-dialog-actions>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-folder-dialog',\n  templateUrl: './new-folder-dialog.component.html',\n  styleUrls: ['./new-folder-dialog.component.css']\n})\nexport class NewFolderDialogComponent implements OnInit {\n\n  public folderName: String;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Rename Item</h1>\\n\\n<mat-dialog-content>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Item Name\\\" [(ngModel)]=\\\"folderName\\\">\\n  </mat-form-field>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button mat-raised-button mat-dialog-close>Cancel</button>\\n  <button mat-raised-button [mat-dialog-close]=\\\"folderName\\\" color=\\\"primary\\\">OK</button>\\n</mat-dialog-actions>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-rename-dialog',\n  templateUrl: './rename-dialog.component.html',\n  styleUrls: ['./rename-dialog.component.css']\n})\nexport class RenameDialogComponent implements OnInit {\n\n  public folderName: String;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.folderName = this.data.itemName;\n  }\n\n}\n","import { v4 } from 'uuid';\n\nimport { FileSource } from \"../model/file-source\";\nimport { FileItem } from \"../model/file-item\";\nimport { clone } from \"../../shared/utils\";\n\nimport { LEFT_PANEL_ID, RIGHT_PANEL_ID } from \"../../state/reducers\";\nimport { LoadSourceItems } from \"../../state/actions\";\n\nexport class FileMock {\n\n  initMockData() {\n    return { left: this.initMockSource(LEFT_PANEL_ID, 'C:'), right: this.initMockSource(RIGHT_PANEL_ID, 'D:') }\n  }\n\n  private initMockSource(panelId: string, name: string) {\n    const source = this.connectSource(panelId, name);\n    const folderA = this.addMockItem(source, { name: 'Documents', isFolder: true, parentItem: 'root' });\n    this.addMockItem(source, { name: 'Pictures', isFolder: true, parentItem: 'root' });\n    const folderB = this.addMockItem(source, { name: 'PDFs', isFolder: true, parentItem: folderA.id });\n    this.addMockItem(source, { name: 'cv', isFolder: false, parentItem: 'root' });\n    this.addMockItem(source, { name: 'rootFile', isFolder: false, parentItem: 'root' });\n    this.addMockItem(source, { name: 'picture1', isFolder: false, parentItem: folderA.id });\n    this.addMockItem(source, { name: 'picture2', isFolder: false, parentItem: folderA.id });\n    this.addMockItem(source, { name: 'picture3', isFolder: false, parentItem: folderA.id });\n    this.addMockItem(source, { name: 'picture4', isFolder: false, parentItem: folderA.id });\n    this.addMockItem(source, { name: 'pdf_100.pdf', isFolder: false, parentItem: folderB.id });\n    this.addMockItem(source, { name: 'pdf_200.pdf', isFolder: false, parentItem: folderB.id });\n    this.addMockItem(source, { name: 'pdf_300.pdf', isFolder: false, parentItem: folderB.id });\n    this.addMockItem(source, { name: 'pdf_400.pdf', isFolder: false, parentItem: folderB.id });\n    return source;\n  }\n\n  private connectSource(id: string, name: string): FileSource {\n    const sourceId = id;\n    const source = new FileSource(sourceId, name);\n    return source;\n  }\n\n  private addMockItem(source: FileSource, fileItem: FileItem) {\n    fileItem.id = v4();\n    source.items.set(fileItem.id, clone(fileItem));\n    return fileItem;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { State, Store } from '@ngrx/store';\n\n\nimport { FileItem } from '../model/file-item';\nimport { FileSource } from '../model/file-source';\nimport { FilePanelMeta } from '../model/file-panel-meta';\nimport { AppState, LEFT_PANEL_ID, RIGHT_PANEL_ID } from '../../state/reducers';\nimport { LoadSourceItems, SelectFolder, AddFolder, RemoveItem, UpdateItem, UpdateCurrentItems, CopyToOtherPanel } from '../../state/actions';\nimport { selectLeftPanel, selectRightPanel, selectPanels } from '../../state/selectors';\nimport { FileMock } from './file-mock';\nimport { clone, convertArrayToMap } from '../../shared/utils';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  private panels = new Map<String, FilePanelMeta>();\n\n  constructor(private store: Store<AppState>) {\n    this.initMockData();\n    let isInit = true;\n    this.store.select(selectPanels).pipe(filter(p => !!p)).subscribe(p => {\n      this.panels.set(LEFT_PANEL_ID, p.panels[LEFT_PANEL_ID]);\n      this.panels.set(RIGHT_PANEL_ID, p.panels[RIGHT_PANEL_ID]);\n\n      if (isInit) {\n        isInit = false;\n        this.queryInFolder(this.panels.get(LEFT_PANEL_ID), 'root');\n        this.selectFolderUp(this.panels.get(LEFT_PANEL_ID));\n        this.queryInFolder(this.panels.get(RIGHT_PANEL_ID), 'root');\n        this.selectFolderUp(this.panels.get(RIGHT_PANEL_ID));\n      }\n    });\n  }\n\n  add(panelId: string, fileItem: FileItem) {\n    this.store.dispatch(new AddFolder(panelId, fileItem));\n  }\n\n  delete(panelId: string, item: FileItem) {\n    const childrenMap = convertArrayToMap(this.getItems(this.panels.get(panelId)), 'parentItem', true);\n    const children = this.findChildren(item, childrenMap);\n    children.forEach(i => this.store.dispatch(new RemoveItem(panelId, i.id)));\n  }\n\n  update(panelId: string, id: string, update: Partial<FileItem>) {\n    update.id = id;\n    this.store.dispatch(new UpdateItem(panelId, update));\n  }\n\n  moveToOtherPanel(panelId: string, item: FileItem) {\n    this.copyToOtherPanel(panelId, item);\n    this.delete(panelId, item);\n  }\n\n  copyToOtherPanel(panelId: string, item: FileItem) {\n    const otherPanelId = panelId === LEFT_PANEL_ID ? RIGHT_PANEL_ID : LEFT_PANEL_ID;\n    const childrenMap = convertArrayToMap(this.getItems(this.panels.get(panelId)), 'parentItem', true);\n    const children = this.findChildren(item, childrenMap);\n    this.store.dispatch(new CopyToOtherPanel(otherPanelId, children, item.id));\n  }\n\n  private findChildren(root: FileItem, childrenMap: any): any[] {\n    const children = childrenMap[root.id] || [];\n    return children.reduce((c, i) => c.concat(this.findChildren(i, childrenMap)), [root]);\n  }\n\n  queryInFolder(panel: FilePanelMeta, folderId: string) {\n    const fileItems = this.queryNodeItems(panel, folderId);\n    const folders = this.queryAllFolders(panel);\n    this.store.dispatch(new UpdateCurrentItems(panel.id, fileItems, folders));\n  }\n\n  queryNodeItems(panel: FilePanelMeta, folderId: string) {\n    return this.getItems(panel).filter(item => item.parentItem === folderId);\n  }\n\n  queryAllFolders(panel: FilePanelMeta) {\n    const result = this.getItems(panel).filter(item => item.isFolder);\n    result.unshift(new FileItem('root', true, '[Root Folder]', null));\n    return result;\n  }\n\n  getItems(panel: FilePanelMeta): FileItem[] {\n    return Array.from(panel.source.items.values());\n  }\n\n  get(panel: FilePanelMeta, id: string) {\n    return panel.source.items.get(id);\n  }\n\n  selectFolderUp(originalPanel: FilePanelMeta) {\n    const panel = { ...originalPanel };\n    if ((!panel.currentRoot) || (panel.currentRoot && panel.currentRoot.parentItem === 'root')) {\n      panel.currentRoot = null;\n      panel.canNavigateUp = false;\n    } else {\n      panel.currentRoot = this.get(panel, panel.currentRoot.parentItem);\n    }\n    panel.currentPath = this.popFromPath(panel.currentPath, panel.source.name);\n    this.store.dispatch(new SelectFolder(panel));\n  }\n  \n  private popFromPath(path: string, sourceName: string) {\n    let p = path || `${sourceName}//`;\n    let split = p.split('/');\n    split.splice(split.length - 2, 1);\n    p = split.join('/');\n    return p;\n  }\n\n  selectFolderDown(originalPanel: FilePanelMeta, item: FileItem) {\n    const panel = { ...originalPanel };\n    panel.currentRoot = item;\n    panel.canNavigateUp = true;\n    panel.currentPath = this.pushToPath(panel.currentPath, item.name, panel.source.name);\n    this.store.dispatch(new SelectFolder(panel));\n  }\n\n  private pushToPath(path: string, folderName: string, sourceName: string) {\n    let p = path || `${sourceName}/`;\n    p += `${folderName}/`;\n    return p;\n  }\n\n  private initMockData() {\n    const mockGenerator = new FileMock();\n    const mockData = mockGenerator.initMockData();\n\n    this.store.dispatch(new LoadSourceItems(LEFT_PANEL_ID, mockData.left));\n    this.store.dispatch(new LoadSourceItems(RIGHT_PANEL_ID, mockData.right));\n  }\n\n}","import { FileItem } from \"../file-commander/model/file-item\";\n\nexport function clone(item: FileItem) {\n  return JSON.parse(JSON.stringify(item));\n}\n\nexport function convertArrayToMap(arrayInput: any[], keyName: string, valuesAsArray: boolean = false) {\n  return arrayInput.reduce((map, obj) => {\n    let items = [];\n    if (valuesAsArray) {\n      if (map[obj[keyName]]) {\n        map[obj[keyName]].push(obj);\n      } else {\n        map[obj[keyName]] = [obj];\n      }\n    } else {\n      map[obj[keyName]] = obj;\n    }\n    return map;\n  }, {});\n\n}\n","import { Action } from \"@ngrx/store\";\n\nimport { FileSource } from \"../file-commander/model/file-source\";\nimport { FilePanelMeta } from \"../file-commander/model/file-panel-meta\";\nimport { FileItem } from \"../file-commander/model/file-item\";\n\nexport const LOAD_SOURCE_ITEMS = 'LOAD_SOURCE_ITEMS';\nexport const SELECT_FOLDER = 'SELECT_FOLDER';\n\nexport const ADD_FOLDER = 'ADD_FOLDER';\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\nexport const UPDATE_CURRENT_ITEMS = 'UPDATE_CURRENT_ITEMS';\nexport const UPDATE_ITEM = 'UPDATE_ITEM';\nexport const COPY_TO_OTHER_PANEL = 'COPY_TO_OTHER_PANEL';\n\nexport class LoadSourceItems implements Action {\n  readonly type = LOAD_SOURCE_ITEMS;\n  constructor(public panelId: string,\n              public source: FileSource) { }\n} \n\nexport class SelectFolder implements Action {\n  readonly type = SELECT_FOLDER;\n  constructor(public panel: FilePanelMeta) { }\n}\n\nexport class UpdateCurrentItems implements Action {\n  readonly type = UPDATE_CURRENT_ITEMS;\n  constructor(public panelId: string,\n              public currentItems: FileItem[],\n              public folders: FileItem[]) { }\n} \n\nexport class AddFolder implements Action {\n  readonly type = ADD_FOLDER;\n  constructor(public panelId: string,\n              public item: FileItem) { }\n} \n\nexport class CopyToOtherPanel implements Action {\n  readonly type = COPY_TO_OTHER_PANEL;\n  constructor(public otherPanelId: string,\n              public items: FileItem[],\n              public rootItemId: string) { }\n} \n\nexport class UpdateItem implements Action {\n  readonly type = UPDATE_ITEM;\n  constructor(public panelId: string,\n              public item: Partial<FileItem>) { }\n} \n\nexport class RemoveItem implements Action {\n  readonly type = REMOVE_ITEM;\n  constructor(public panelId: string,\n              public id: string) { }\n} \n","import { Action } from '@ngrx/store';\nimport { v4 } from 'uuid';\n\nimport { LOAD_SOURCE_ITEMS, SELECT_FOLDER, ADD_FOLDER, REMOVE_ITEM, UPDATE_ITEM, UPDATE_CURRENT_ITEMS, COPY_TO_OTHER_PANEL } from './actions';\nimport { clone } from '../shared/utils';\n\nimport { FilePanelMeta } from '../file-commander/model/file-panel-meta';\nimport { FileSource } from '../file-commander/model/file-source';\nimport { FileItem } from '../file-commander/model/file-item';\n\nexport const LEFT_PANEL_ID = 'left';\nexport const RIGHT_PANEL_ID = 'right';\n\nexport interface AppState {\n  panels: {\n    [LEFT_PANEL_ID]: FilePanelMeta,\n    [RIGHT_PANEL_ID]: FilePanelMeta\n  }\n};\n\nconst initialAppState: AppState = {\n  panels: {\n    [LEFT_PANEL_ID]: new FilePanelMeta(LEFT_PANEL_ID, new FileSource(LEFT_PANEL_ID, 'C:')),\n    [RIGHT_PANEL_ID]: new FilePanelMeta(RIGHT_PANEL_ID, new FileSource(RIGHT_PANEL_ID, 'D:'))\n  }\n};\n\nexport function fileCommanderReducer(state: AppState = initialAppState, action: any) {\n  switch (action.type) {\n    case LOAD_SOURCE_ITEMS: {\n      return { ...state, panels: { ...state.panels, [action.panelId]: { ...state.panels[action.panelId], source: action.source }}};\n    }\n    case SELECT_FOLDER: {\n      return { ...state, panels: { ...state.panels, [action.panel.id]: action.panel }};\n    }\n    case UPDATE_CURRENT_ITEMS: {\n      return { ...state, panels: { ...state.panels, [action.panelId]: {\n        ...state.panels[action.panelId], currentItems: action.currentItems, allFolders: action.folders\n      }}};\n    }\n    case ADD_FOLDER: {\n      const id = v4();\n      action.item.id = id;\n      const newItemsMap = new Map(state.panels[action.panelId].source.items);\n      newItemsMap.set(id, clone(action.item));\n      return { ...state, panels: { ...state.panels, [action.panelId]: {\n        ...state.panels[action.panelId], source: { ...state.panels[action.panelId].source,\n          items: newItemsMap }\n        }\n      }};\n    }\n    case COPY_TO_OTHER_PANEL: {\n      const panel = state.panels[action.otherPanelId];\n      const newItemsMap = new Map(panel.source.items);\n      action.items.forEach( e => newItemsMap.set(e.id, clone(e)) );\n      const rootItem: FileItem = newItemsMap.get(action.rootItemId);\n      rootItem.parentItem = panel.currentRoot ? panel.currentRoot.id : 'root';\n      return { ...state, panels: { ...state.panels, [action.otherPanelId]: {\n        ...panel, source: { ...panel.source,\n          items: newItemsMap }\n        }\n      }};\n    }\n    case UPDATE_ITEM: {\n      const newItemsMap = new Map(state.panels[action.panelId].source.items);\n      newItemsMap.set(action.item.id, Object.assign(newItemsMap.get(action.item.id), action.item));\n      return { ...state, panels: { ...state.panels, [action.panelId]: {\n        ...state.panels[action.panelId], source: { ...state.panels[action.panelId].source,\n          items: newItemsMap }\n        }\n      }};\n    }\n    case REMOVE_ITEM: {\n      const newItemsMap = new Map(state.panels[action.panelId].source.items);\n      newItemsMap.delete(action.id);\n      return { ...state, panels: { ...state.panels, [action.panelId]: {\n        ...state.panels[action.panelId], source: { ...state.panels[action.panelId].source,\n          items: newItemsMap }\n      }}};\n    }\n    default:\n      return state;\n  }\n}","import { createSelector, createFeatureSelector } from \"@ngrx/store\";\n\nimport { AppState, LEFT_PANEL_ID, RIGHT_PANEL_ID } from \"./reducers\";\n\nexport const selectPanels = createFeatureSelector<AppState>('panels');\nexport const selectLeftPanel = createSelector(selectPanels, (state: any) => state.panels.left);\nexport const selectRightPanel = createSelector(selectPanels, (state: any) => state.panels.right);\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}